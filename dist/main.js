/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss ***!
  \*********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*,\\n*::before,\\n*::after {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: inherit;\\n}\\n\\nhtml, body {\\n  font-size: 62.5%;\\n  box-sizing: border-box;\\n  background: #28282B;\\n}\\n\\n.container {\\n  position: relative;\\n  height: 100vh;\\n  width: 100vw;\\n  display: grid;\\n  grid-template-rows: 10% 80% 10%;\\n}\\n.container .intro {\\n  display: grid;\\n  grid-template-rows: 40% 60%;\\n  z-index: 1000;\\n  position: absolute;\\n  height: 100vh;\\n  width: 100vw;\\n  background: #000;\\n}\\n.container .intro .introOne {\\n  display: grid;\\n  place-items: center;\\n}\\n.container .intro .introOne #title {\\n  cursor: pointer;\\n  color: #fff;\\n  font-family: cursive, monospace, sans-serif;\\n  font-size: 5rem;\\n}\\n.container .intro .introTwo {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n}\\n.container .intro .introTwo .introTwoOne {\\n  display: grid;\\n  place-items: center;\\n}\\n.container .intro .introTwo .introTwoOne #pvc {\\n  cursor: pointer;\\n  font-family: cursive, monospace, sans-serif;\\n  font-size: 1.5rem;\\n  font-weight: 900;\\n  margin: 0 1rem;\\n  background: #fff;\\n  color: #000;\\n  border: none;\\n  outline: none;\\n  border-radius: 2rem;\\n  height: 4rem;\\n  width: 17rem;\\n  transition: 0.7s ease-in;\\n}\\n.container .intro .introTwo .introTwoOne #pvc:hover {\\n  color: #fff;\\n  border: 0.1px solid #fff;\\n  background: #000;\\n}\\n.container .intro .introTwo .introTwoTwo {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.container .intro .introTwo .introTwoTwo #pvp {\\n  cursor: pointer;\\n  font-family: cursive, monospace, sans-serif;\\n  font-size: 1.5rem;\\n  font-weight: 900;\\n  margin: 0 1rem;\\n  background: #fff;\\n  color: #000;\\n  border: none;\\n  outline: none;\\n  border-radius: 2rem;\\n  height: 4rem;\\n  width: 17rem;\\n  transition: 0.7s ease-in;\\n}\\n.container .intro .introTwo .introTwoTwo #pvp:hover {\\n  color: #fff;\\n  border: 0.1px solid #fff;\\n  background: #000;\\n}\\n.container .outro {\\n  display: none;\\n  place-items: center;\\n  z-index: 1000;\\n  position: absolute;\\n  height: 100vh;\\n  width: 100vw;\\n  background: #000;\\n}\\n.container .outro .outroDiv {\\n  border: solid #fff;\\n  border-radius: 10px;\\n  height: 80%;\\n  width: 80%;\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .outro .outroDiv {\\n    width: 100%;\\n  }\\n}\\n.container .outro .outroDiv .outroBtn {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.container .outro .outroDiv .outroBtn button {\\n  background: #fff;\\n  cursor: pointer;\\n  height: 20%;\\n  width: 20%;\\n  margin: 0 5rem;\\n  border-radius: 10rem;\\n  font-size: 2rem;\\n  font-family: cursive, monospace, sans-serif;\\n  color: #000;\\n  transition: 0.7s ease-in-out;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .outro .outroDiv .outroBtn button {\\n    font-size: 1.5rem;\\n    margin: 0 1rem;\\n    height: 20%;\\n    width: 50%;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .outro .outroDiv .outroBtn button {\\n    font-size: 1.5rem;\\n  }\\n}\\n.container .outro .outroDiv .outroBtn button:hover {\\n  color: #fff;\\n  border: 1px solid #fff;\\n  background: #000;\\n}\\n.container .outro .outroDiv .declareWinner {\\n  display: grid;\\n  place-items: center;\\n}\\n.container .outro .winnerStyle {\\n  color: #fff;\\n  font-size: 6rem;\\n  font-family: cursive, monospace, sans-serif;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .outro .winnerStyle {\\n    font-size: 3rem;\\n  }\\n}\\n.container .outroAI {\\n  display: none;\\n  place-items: center;\\n  z-index: 1000;\\n  position: absolute;\\n  height: 100vh;\\n  width: 100vw;\\n  background: #000;\\n}\\n.container .outroAI .outroDiv {\\n  border: solid #fff;\\n  border-radius: 10px;\\n  height: 80%;\\n  width: 80%;\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .outroAI .outroDiv {\\n    width: 100%;\\n  }\\n}\\n.container .outroAI .outroDiv .outroBtn {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.container .outroAI .outroDiv .outroBtn button {\\n  background: #fff;\\n  cursor: pointer;\\n  height: 20%;\\n  width: 20%;\\n  margin: 0 5rem;\\n  border-radius: 10rem;\\n  font-size: 2rem;\\n  font-family: cursive, monospace, sans-serif;\\n  color: #000;\\n  transition: 0.7s ease-in-out;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .outroAI .outroDiv .outroBtn button {\\n    font-size: 1.5rem;\\n    margin: 0 1rem;\\n    height: 20%;\\n    width: 50%;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .outroAI .outroDiv .outroBtn button {\\n    font-size: 1.5rem;\\n  }\\n}\\n.container .outroAI .outroDiv .outroBtn button:hover {\\n  color: #fff;\\n  border: 1px solid #fff;\\n  background: #000;\\n}\\n.container .outroAI .outroDiv .declareWinner2 {\\n  display: grid;\\n  place-items: center;\\n}\\n.container .outroAI .winnerStyle {\\n  color: #fff;\\n  font-size: 6rem;\\n  font-family: cursive, monospace, sans-serif;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .outroAI .winnerStyle {\\n    font-size: 3rem;\\n  }\\n}\\n.container .pvpModal {\\n  display: none;\\n  place-items: center;\\n  z-index: 1000;\\n  position: absolute;\\n  height: 100vh;\\n  width: 100vw;\\n  background: #00000027;\\n}\\n.container .pvpModal .pvpDiv {\\n  position: relative;\\n  border: 1px solid #fff;\\n  border-radius: 1rem;\\n  background: #4fa1ff;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  height: 60%;\\n  width: 55%;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvpModal .pvpDiv {\\n    width: 90%;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .pvpModal .pvpDiv {\\n    width: 90%;\\n  }\\n}\\n.container .pvpModal .pvpDiv .closePvP {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin: 0 1rem;\\n}\\n.container .pvpModal .pvpDiv .closePvP #closePvP {\\n  cursor: pointer;\\n  color: #fff;\\n  font-size: 3rem;\\n  transition: 0.7s ease-in-out;\\n}\\n.container .pvpModal .pvpDiv .closePvP #closePvP:hover {\\n  transform: rotate(360deg);\\n}\\n.container .pvpModal .pvpDiv .playerDiv {\\n  display: grid;\\n  grid-template-columns: 85% 15%;\\n  justify-content: center;\\n  align-items: center;\\n  height: 30%;\\n  width: 70%;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvpModal .pvpDiv .playerDiv {\\n    width: 100%;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .pvpModal .pvpDiv .playerDiv {\\n    width: 90%;\\n  }\\n}\\n.container .pvpModal .pvpDiv .playerDiv form {\\n  width: 100%;\\n}\\n.container .pvpModal .pvpDiv .playerDiv form label {\\n  font-size: 2.2rem;\\n  color: #fff;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvpModal .pvpDiv .playerDiv form label {\\n    font-size: 1.8rem;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .pvpModal .pvpDiv .playerDiv form label {\\n    font-size: 1.8rem;\\n  }\\n}\\n.container .pvpModal .pvpDiv .playerDiv form input {\\n  margin: 0 0.5rem;\\n  height: 3rem;\\n  width: 70%;\\n  font-size: 2rem;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvpModal .pvpDiv .playerDiv form input {\\n    width: 60%;\\n  }\\n}\\n.container .pvpModal .pvpDiv .playerDiv button {\\n  color: #fff;\\n  background: #000;\\n  cursor: pointer;\\n  height: 3rem;\\n  width: 8rem;\\n  border-radius: 10rem;\\n  border: none;\\n  outline: none;\\n  transition: 0.7s ease-in-out;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvpModal .pvpDiv .playerDiv button {\\n    width: 5rem;\\n    margin: 0;\\n  }\\n}\\n.container .pvpModal .pvpDiv .playerDiv button:hover {\\n  border: 1px solid #000000;\\n  color: #000;\\n  background: #fff;\\n}\\n.container .pvpModal .pvpDiv #playGame {\\n  color: #fff;\\n  background: #000;\\n  cursor: pointer;\\n  margin: 0 1rem;\\n  height: 3rem;\\n  width: 8rem;\\n  border-radius: 10rem;\\n  border: none;\\n  outline: none;\\n  transition: 0.7s ease-in-out;\\n}\\n.container .pvpModal .pvpDiv #playGame:hover {\\n  border: 1px solid #000000;\\n  color: #000;\\n  background: #fff;\\n}\\n.container .pvcModal {\\n  display: none;\\n  place-items: center;\\n  z-index: 1000;\\n  position: absolute;\\n  height: 100vh;\\n  width: 100vw;\\n  background: #00000027;\\n}\\n.container .pvcModal .pvpDiv {\\n  position: relative;\\n  border: 1px solid #fff;\\n  border-radius: 1rem;\\n  background: #4fa1ff;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  height: 60%;\\n  width: 55%;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvcModal .pvpDiv {\\n    width: 90%;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .pvcModal .pvpDiv {\\n    width: 90%;\\n  }\\n}\\n.container .pvcModal .pvpDiv .closePvC {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  margin: 0 1rem;\\n}\\n.container .pvcModal .pvpDiv .closePvC #closePvC {\\n  cursor: pointer;\\n  color: #fff;\\n  font-size: 3rem;\\n  transition: 0.7s ease-in-out;\\n}\\n.container .pvcModal .pvpDiv .closePvC #closePvC:hover {\\n  transform: rotate(360deg);\\n}\\n.container .pvcModal .pvpDiv .playerDiv {\\n  display: grid;\\n  grid-template-columns: 85% 15%;\\n  justify-content: center;\\n  align-items: center;\\n  height: 30%;\\n  width: 70%;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvcModal .pvpDiv .playerDiv {\\n    width: 100%;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .pvcModal .pvpDiv .playerDiv {\\n    width: 90%;\\n  }\\n}\\n.container .pvcModal .pvpDiv .playerDiv form {\\n  width: 100%;\\n}\\n.container .pvcModal .pvpDiv .playerDiv form label {\\n  font-size: 2.2rem;\\n  color: #fff;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvcModal .pvpDiv .playerDiv form label {\\n    font-size: 1.8rem;\\n  }\\n}\\n@media (min-width: 501px) and (max-width: 992px) {\\n  .container .pvcModal .pvpDiv .playerDiv form label {\\n    font-size: 1.8rem;\\n  }\\n}\\n.container .pvcModal .pvpDiv .playerDiv form input {\\n  margin: 0 0.5rem;\\n  height: 3rem;\\n  width: 70%;\\n  font-size: 2rem;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvcModal .pvpDiv .playerDiv form input {\\n    width: 60%;\\n  }\\n}\\n.container .pvcModal .pvpDiv .playerDiv button {\\n  color: #fff;\\n  background: #000;\\n  cursor: pointer;\\n  height: 3rem;\\n  width: 8rem;\\n  border-radius: 10rem;\\n  border: none;\\n  outline: none;\\n  transition: 0.7s ease-in-out;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .pvcModal .pvpDiv .playerDiv button {\\n    width: 5rem;\\n    margin: 0;\\n  }\\n}\\n.container .pvcModal .pvpDiv .playerDiv button:hover {\\n  border: 1px solid #000000;\\n  color: #000;\\n  background: #fff;\\n}\\n.container .pvcModal .pvpDiv #playAI {\\n  color: #fff;\\n  background: #000;\\n  cursor: pointer;\\n  margin: 0 1rem;\\n  height: 3rem;\\n  width: 8rem;\\n  border-radius: 10rem;\\n  border: none;\\n  outline: none;\\n  transition: 0.7s ease-in-out;\\n}\\n.container .pvcModal .pvpDiv #playAI:hover {\\n  border: 1px solid #000000;\\n  color: #000;\\n  background: #fff;\\n}\\n.container .navbar {\\n  display: grid;\\n  place-items: center;\\n  height: 100%;\\n}\\n.container .navbar h1 {\\n  cursor: pointer;\\n  color: #fff;\\n  font-size: 3rem;\\n  font-family: \\\"Courier New\\\", Courier, monospace;\\n}\\n.container .mainContent {\\n  display: none;\\n  grid-template-columns: 40% 20% 40%;\\n  height: 100%;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .mainContent {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 45% 10% 45%;\\n  }\\n}\\n.container .mainContent .box {\\n  height: 100%;\\n  width: 100%;\\n}\\n.container .mainContent .box .gameBoard {\\n  margin: 3rem auto;\\n  height: 90%;\\n  width: 90%;\\n  display: grid;\\n  grid-template-columns: repeat(10, 1fr);\\n  grid-template-rows: repeat(10, 1fr);\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .mainContent .box .gameBoard {\\n    margin: 0;\\n    height: 100%;\\n    width: 100%;\\n  }\\n}\\n.container .mainContent .box .gameBoard .grid, .container .mainContent .box .gameBoard .gridd {\\n  z-index: 100;\\n  cursor: pointer;\\n  border: 0.1px solid white;\\n  background: #21aeff;\\n}\\n.container .mainContent .box .gameBoard .popup {\\n  animation: popping 0.7s;\\n}\\n.container .mainContent .turnTwo {\\n  justify-self: center;\\n  align-self: center;\\n  height: 30%;\\n  width: 60%;\\n  background: black;\\n  border-radius: 2rem;\\n  display: grid;\\n  place-items: center;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .mainContent .turnTwo {\\n    height: 70%;\\n  }\\n}\\n.container .mainContent .turnTwo .textStyle {\\n  color: #fff;\\n  font-size: 1.5rem;\\n  font-family: cursive, sans-serif;\\n}\\n.container .mainContent2 {\\n  display: none;\\n  grid-template-columns: 40% 20% 40%;\\n  height: 100%;\\n  z-index: 1000;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .mainContent2 {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: 45% 10% 45%;\\n  }\\n}\\n.container .mainContent2 .box {\\n  height: 100%;\\n  width: 100%;\\n}\\n.container .mainContent2 .box .gameBoard {\\n  margin: 3rem auto;\\n  height: 90%;\\n  width: 90%;\\n  display: grid;\\n  grid-template-columns: repeat(10, 1fr);\\n  grid-template-rows: repeat(10, 1fr);\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .mainContent2 .box .gameBoard {\\n    margin: 0;\\n    height: 100%;\\n    width: 100%;\\n  }\\n}\\n.container .mainContent2 .box .gameBoard .soloGrid, .container .mainContent2 .box .gameBoard .aiGrid {\\n  z-index: 100;\\n  cursor: pointer;\\n  border: 0.1px solid white;\\n  background: #21aeff;\\n}\\n.container .mainContent2 .box .gameBoard .popup {\\n  animation: popping 0.7s;\\n}\\n.container .mainContent2 .turnTwo {\\n  justify-self: center;\\n  align-self: center;\\n  height: 30%;\\n  width: 60%;\\n  background: black;\\n  border-radius: 2rem;\\n  display: grid;\\n  place-items: center;\\n}\\n@media (min-width: 200px) and (max-width: 500px) {\\n  .container .mainContent2 .turnTwo {\\n    height: 70%;\\n  }\\n}\\n.container .mainContent2 .turnTwo .textStyle {\\n  color: #fff;\\n  font-size: 1.5rem;\\n  font-family: cursive, sans-serif;\\n}\\n.container .ShipContainer {\\n  height: 100%;\\n  display: grid;\\n  place-items: center;\\n}\\n.container .ShipContainer .buttons {\\n  display: grid;\\n  place-items: center;\\n}\\n.container .ShipContainer .buttons button {\\n  background: #fff;\\n  color: #000;\\n  cursor: pointer;\\n  border: none;\\n  outline: none;\\n  border-radius: 2rem;\\n  height: 3rem;\\n  width: 10rem;\\n  transition: 0.7s ease-in;\\n}\\n.container .ShipContainer .buttons button:hover {\\n  border: 0.1px solid #fff;\\n  background: #000;\\n  color: #fff;\\n}\\n\\n@keyframes popping {\\n  0% {\\n    transform: scale(0);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\\n@keyframes slideIn {\\n  0% {\\n    height: 0;\\n  }\\n  100% {\\n    height: 100vh;\\n  }\\n}\\n@keyframes scaleIn {\\n  0% {\\n    transform: scale(0);\\n  }\\n  100% {\\n    transform: scale(1);\\n  }\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://jest/./src/sass/main.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://jest/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://jest/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/sass/main.scss":
/*!****************************!*\
  !*** ./src/sass/main.scss ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./main.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_main_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://jest/./src/sass/main.scss?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://jest/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://jest/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://jest/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://jest/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://jest/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://jest/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sass_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sass/main.scss */ \"./src/sass/main.scss\");\n/* harmony import */ var _modules_util_domutil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/util/domutil */ \"./src/modules/util/domutil.js\");\n/* harmony import */ var _modules_View__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/View */ \"./src/modules/View.js\");\n/* harmony import */ var _modules_AI__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/AI */ \"./src/modules/AI.js\");\n/* harmony import */ var _modules_util_domhelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/util/domhelper */ \"./src/modules/util/domhelper.js\");\n// 🔮 Sass\r\n\r\n\r\n\r\n// 🤖 Modules\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://jest/./src/index.js?");

/***/ }),

/***/ "./src/modules/AI.js":
/*!***************************!*\
  !*** ./src/modules/AI.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_domutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/domutil */ \"./src/modules/util/domutil.js\");\n\r\n\r\nconst gameBoard = __webpack_require__(/*! ../modules/factories/gameboard */ \"./src/modules/factories/gameboard.js\");\r\nconst Ship = __webpack_require__(/*! ../modules/factories/shipfactory */ \"./src/modules/factories/shipfactory.js\");\r\nconst Player = __webpack_require__(/*! ../modules/factories/playerfactory */ \"./src/modules/factories/playerfactory.js\");\r\n\r\n// AI board related dom elements \r\nconst startGameAI = document.getElementById('playAI');\r\nconst soloPlayer = document.getElementById('soloPlayer'); \r\nconst soloPlayerBtn = document.getElementById('soloPlayerBtn');\r\nconst soloPlayerGrids = document.querySelectorAll('.soloGrid');\r\nconst AIGrids = document.querySelectorAll('.aiGrid');\r\nconst directionBtn = document.getElementById('changeDirection');\r\nconst returnHome = document.getElementById('returnHome2');\r\nconst playAgain = document.getElementById('playAgain2');\r\n\r\nlet thePlayer;\r\nlet currentDirection = _util_domutil__WEBPACK_IMPORTED_MODULE_0__.direction;\r\nlet foo = 'destroyer';\r\nlet foo2 = 'destroyer';\r\nlet turn = 'Player One';\r\nlet aiBoardFilled = false;\r\nlet playing = false;\r\n\r\nconst newBoard = new gameBoard();\r\nconst board = newBoard.createBoard();\r\nlet covered = [];\r\n\r\nconst newBoard2 = new gameBoard();\r\nconst board2 = newBoard2.createBoard();\r\nlet covered2 = [];\r\nlet attacked = []; // arr keep tracks of all the index where the players board has been hit.\r\nlet attacked2 = []; // keep track of all the index where the AI board has been hit.\r\n\r\n// randomPot will need to be set back to the inital value after starting / ending the game.\r\n\r\n// player' ship asset\r\nconst destroyer = new Ship('destroyer', 2);\r\nconst submarine = new Ship('submarine', 2);\r\nconst cruiser = new Ship('cruiser', 3);\r\nconst battleship = new Ship('battleship', 4);\r\nconst carrier = new Ship('carrier', 5);\r\n\r\nfunction changeDirection() {\r\n    if (currentDirection === 'X') {\r\n        currentDirection = 'Y';\r\n    } else if (currentDirection === 'Y') {\r\n        currentDirection = 'X';\r\n    }\r\n};\r\n\r\ndirectionBtn.addEventListener('click', changeDirection);\r\n\r\n// 1. Starting game player vs computer, closing the modal and opening the boards.\r\nstartGameAI.addEventListener('click', () => {\r\n    // 1. Close the current modal and the intro page\r\n    const intro = document.querySelector('.intro');\r\n    intro.style.display = 'none';\r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.closeModalPvC)(); \r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.showPvC)();\r\n});\r\n\r\n// 2. Create player object \r\nsoloPlayerBtn.addEventListener('click', () => {\r\n    if (soloPlayer.value) {\r\n        thePlayer = new Player(soloPlayer.value);\r\n        soloPlayer.value = '';\r\n    } else {\r\n        thePlayer = new Player('Player One');\r\n    }\r\n});\r\n\r\n// 3. Function to set the ship on the board \r\nfunction shipPlacement(e, length) {\r\n    const target = e.target;\r\n    const soloIndex = Number(target.getAttribute('soloIndex'));\r\n\r\n    const arr = []; // make sure the first number >= 0 && last number <= 99.\r\n\r\n    if (currentDirection === 'X') {\r\n        const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisX)(soloIndex);\r\n\r\n        if (length === 2 && position + length <= 10 && foo === 'destroyer' || foo === 'submarine') {\r\n            const one = soloIndex;\r\n            const two = soloIndex + 1;\r\n            \r\n            if (covered.includes(one) || covered.includes(two)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 1);\r\n                covered.push(soloIndex, soloIndex + 1);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                if (foo === 'destroyer') {\r\n                    newBoard.placeShipX(soloIndex, length, destroyer.name, destroyer.name);\r\n                    foo = 'submarine';\r\n                } else if (foo === 'submarine') {\r\n                    newBoard.placeShipX(soloIndex, length, submarine.name, submarine.name);\r\n                    foo = 'cruiser';\r\n                }\r\n            }\r\n        } else if (length === 3 && position + length <= 10) {\r\n            const one = soloIndex; \r\n            const two = soloIndex + 1;\r\n            const three = soloIndex + 2;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 1, soloIndex + 2);\r\n                covered.push(soloIndex, soloIndex + 1, soloIndex + 2);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipX(soloIndex, length, cruiser.name, cruiser.name, cruiser.name);\r\n                foo = 'battleship';\r\n            }\r\n        } else if (length === 4 && position + length <= 10) {\r\n            const one = soloIndex;\r\n            const two = soloIndex + 1;\r\n            const three = soloIndex + 2;\r\n            const four = soloIndex + 3;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 1, soloIndex + 2, soloIndex + 3);\r\n                covered.push(soloIndex, soloIndex + 1, soloIndex + 2, soloIndex + 3);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipX(soloIndex, length, battleship.name, battleship.name, battleship.name, battleship.name);\r\n                foo = 'carrier';\r\n            }\r\n        } else if (length === 5 && position + length <= 10) { // or could be lenght < 10\r\n            const one = soloIndex; \r\n            const two = soloIndex + 1;\r\n            const three = soloIndex + 2;\r\n            const four = soloIndex + 3;\r\n            const five = soloIndex + 4;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four) || covered.includes(five)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 1, soloIndex + 2, soloIndex + 3, soloIndex + 4);\r\n                covered.push(soloIndex, soloIndex + 1, soloIndex + 2, soloIndex + 3, soloIndex + 4);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n                \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n                \r\n                newBoard.placeShipX(soloIndex, length, carrier.name, carrier.name, carrier.name, carrier.name, carrier.name);\r\n\r\n                setTimeout(() => {\r\n                    foo = 'attack';\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    soloPlayerGrids.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n\r\n                setTimeout(() => {\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    AIGrids.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n            }\r\n        } \r\n    };\r\n\r\n    if (currentDirection === 'Y') {\r\n        const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisY)(soloIndex);\r\n\r\n        if (length === 2 && position + length <= 82 && foo === 'destroyer' || foo === 'submarine') {\r\n            const one = soloIndex;\r\n            const two = soloIndex + 10;\r\n\r\n            if (covered.includes(one) || covered.includes(two)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 10);\r\n                covered.push(soloIndex, soloIndex + 10);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                if (foo === 'destroyer') {\r\n                    newBoard.placeShipY(length, foo, one, two);\r\n                    foo = 'submarine';\r\n                } else if (foo === 'submarine') {\r\n                    newBoard.placeShipY(length, foo, one, two);\r\n                    foo = 'cruiser';\r\n                }\r\n            };\r\n        } else if (length === 3 && position + length <= 73) {\r\n            const one = soloIndex; \r\n            const two = soloIndex + 10;\r\n            const three = soloIndex + 20;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 10, soloIndex + 20);\r\n                covered.push(soloIndex, soloIndex + 10, soloIndex + 20)\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipY(length, foo, one, two, three)\r\n                foo = 'battleship';\r\n            }\r\n        } else if (length === 4 && position + length <= 64) {\r\n            const one = soloIndex;\r\n            const two = soloIndex + 10;\r\n            const three = soloIndex + 20;\r\n            const four = soloIndex + 30;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 10, soloIndex + 20, soloIndex + 30);\r\n                covered.push(soloIndex, soloIndex + 10, soloIndex + 20, soloIndex + 30);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n                \r\n                newBoard.placeShipY(length, foo, one, two, three, four)\r\n                foo = 'carrier';\r\n            }\r\n        } else if (length === 5 && position + length <= 55) {\r\n            const one = soloIndex; \r\n            const two = soloIndex + 10;\r\n            const three = soloIndex + 20;\r\n            const four = soloIndex + 30;\r\n            const five = soloIndex + 40;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four) || covered.includes(five)) {\r\n                return;\r\n            } else {\r\n                arr.push(soloIndex, soloIndex + 10, soloIndex + 20, soloIndex + 30, soloIndex + 40);\r\n                covered.push(soloIndex, soloIndex + 10, soloIndex + 20, soloIndex + 30, soloIndex + 40);\r\n                const divs = Array.from(soloPlayerGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipY(length, foo, one, two, three, four, five);\r\n\r\n                setTimeout(() => {\r\n                    foo = 'attack';\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    soloPlayerGrids.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n\r\n                setTimeout(() => {\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    AIGrids.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n            }\r\n        };\r\n    };\r\n};\r\n\r\n\r\n// 4. Function that call the function that place ship on the board \r\nfunction setShips(e, length) {\r\n    if (foo === 'destroyer') {\r\n        shipPlacement(e, 2);\r\n    }\r\n\r\n    if (foo === 'submarine') {\r\n        shipPlacement(e, 2);\r\n    }\r\n\r\n    if (foo === 'cruiser') {\r\n        shipPlacement(e, 3);\r\n    }\r\n\r\n    if (foo === 'battleship') {\r\n        shipPlacement(e, 4);\r\n    }\r\n\r\n    if (foo === 'carrier') {\r\n        shipPlacement(e, 5);\r\n        playing = true;\r\n    }\r\n};\r\n\r\n\r\n// 5. Function to place ship for AI\r\nfunction aiShipPlacement() {\r\n    let random = Math.ceil(Math.random() * 99);\r\n    const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisX)(random);\r\n    const arr = [];\r\n    console.log(random);\r\n\r\n    if (!covered2.includes(random) && position + 1 <= 10 && foo2 === 'destroyer' || foo2 === 'submarine') {\r\n        if (position + 2 <= 10) {\r\n            const one = random;\r\n            const two = random + 1;\r\n    \r\n            if (covered2.includes(one) || covered2.includes(two)) {\r\n                //console.log('r1');\r\n                //aiShipPlacement();\r\n                return;\r\n            } else {\r\n                arr.push(random, random + 1);\r\n                covered2.push(random, random + 1);\r\n                const divs = Array.from(AIGrids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    //el.style.background = '#41ffb0';\r\n                    el.style.background = 'red';\r\n                });\r\n    \r\n                if (foo2 === 'destroyer') {\r\n                    newBoard2.placeShipX(one, 2, destroyer.name, destroyer.name);\r\n                    foo2 = 'submarine';\r\n                } else if (foo2 === 'submarine') {\r\n                    newBoard2.placeShipX(one, 2, submarine.name, submarine.name);\r\n                    foo2 = 'cruiser';\r\n                }\r\n            }\r\n        } //else {\r\n            //console.log('ship exceeds 2');\r\n        //};\r\n    } else if (!covered2.includes(random) && position + 2 <= 10 && foo2 === 'cruiser') {\r\n        if (position + 3 <= 10) {\r\n            const one = random;\r\n            const two = random + 1;\r\n            const three = random + 2;\r\n        \r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three)) {\r\n                return;\r\n                //console.log('r2');\r\n                //aiShipPlacement();\r\n            } else {\r\n                arr.push(random, random + 1, random + 2);\r\n                covered2.push(random, random + 1, random + 2);\r\n                const divs = Array.from(AIGrids);\r\n                const curDivs = [];\r\n        \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n        \r\n                curDivs.forEach(el => {\r\n                   // el.style.background = '#41ffb0';\r\n                    el.style.background = 'blue';\r\n                });\r\n        \r\n                newBoard2.placeShipX(one, 3, cruiser.name, cruiser.name, cruiser.name);\r\n                foo2 = 'battleship';\r\n            };\r\n        } //else {\r\n            //console.log('position exceeds 3');\r\n        //}\r\n    } else if (!covered2.includes(random) && position + 3 <= 10 && foo2 === 'battleship') {\r\n        if (position + 4 <= 10) {\r\n            const one = random;\r\n            const two = random + 1;\r\n            const three = random + 2;\r\n            const four = random + 3;\r\n        \r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three) || covered2.includes(four)) {\r\n                return;\r\n                //console.log('r3');\r\n                //aiShipPlacement();\r\n            } else {\r\n                arr.push(random, random + 1, random + 2, random + 3);\r\n                covered2.push(random, random + 1, random + 2, random + 3);\r\n                const divs = Array.from(AIGrids);\r\n                const curDivs = [];\r\n        \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n        \r\n                curDivs.forEach(el => {\r\n                    //el.style.background = '#41ffb0';\r\n                    el.style.background = 'orange';\r\n                });\r\n        \r\n                newBoard2.placeShipX(one, 4, battleship.name, battleship.name, battleship.name, battleship.name);\r\n                foo2 = 'carrier';\r\n            };\r\n        } //else {\r\n            //console.log('position exceeds 4');\r\n        //}\r\n    } else if (!covered2.includes(random) && position + 4 <= 10 && foo2 === 'carrier') {\r\n        if (position + 5 <= 10) {\r\n            const one = random;\r\n            const two = random + 1;\r\n            const three = random + 2;\r\n            const four = random + 3;\r\n            const five = random + 4;\r\n        \r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three) || covered2.includes(four) || covered.includes(five)) {\r\n                return;\r\n                //console.log('r4');\r\n                //aiShipPlacement();\r\n            } else {\r\n                arr.push(random, random + 1, random + 2, random + 3, random + 4);\r\n                covered2.push(random, random + 1, random + 2, random + 3, random + 4);\r\n                const divs = Array.from(AIGrids);\r\n                const curDivs = [];\r\n        \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n        \r\n                curDivs.forEach(el => {\r\n                    //el.style.background = '#41ffb0';\r\n                    el.style.background = 'purple';\r\n                });\r\n        \r\n                newBoard2.placeShipX(one, 5, carrier.name, carrier.name, carrier.name, carrier.name, carrier.name);\r\n                foo2 = '';\r\n                aiBoardFilled = true;\r\n            } \r\n        } //else {\r\n            //console.log('position exceeds 5');\r\n        //}\r\n    };\r\n\r\n    console.log(foo2);\r\n};\r\n\r\n\r\n\r\n// 6. Function that call the aiShipPlacement function\r\nfunction setAIShips() {\r\n    if (foo2 === 'destroyer') {\r\n        aiShipPlacement();\r\n    }\r\n\r\n    if (foo2 === 'submarine') {\r\n        aiShipPlacement();\r\n    }\r\n\r\n    if (foo2 === 'cruiser') {\r\n        aiShipPlacement();\r\n    }\r\n\r\n    if (foo2 === 'battleship') {\r\n        aiShipPlacement();\r\n    }\r\n\r\n    if (foo2 === 'carrier') {\r\n        aiShipPlacement();\r\n    }\r\n};\r\n\r\n\r\nsetInterval(() => {\r\n    if (playing) {\r\n        while (!aiBoardFilled) {\r\n            setAIShips();\r\n        };\r\n    } \r\n}, 1000);\r\n\r\n\r\n// 5. Attack Function for Player 🐱‍🏍 \r\n// this function need more work\r\n\r\nfunction attack(e) {\r\n    const target = e.target;\r\n    const aiindex = Number(target.getAttribute('aiindex'));\r\n\r\n    if (board2[aiindex] !== '') {\r\n        if (AIGrids[aiindex].style.background !== 'red' && AIGrids[aiindex].style.background !== 'rgb(255, 255, 255)') {\r\n            AIGrids[aiindex].style.background = 'red';\r\n            turn = 'Computer';\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.notifyPlayers)(turn); // changes turn\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetHit)();\r\n            board2.splice(aiindex, 1, '');\r\n        }\r\n    } else {\r\n        if (AIGrids[aiindex].style.background !== 'rgb(255, 255, 255)' && AIGrids[aiindex].style.background !== 'red') {\r\n            turn = 'Computer'; \r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.notifyPlayers)(turn);\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetMiss)();\r\n            AIGrids[aiindex].style.background = 'rgb(255, 255, 255)';\r\n        }\r\n    };\r\n};\r\n\r\n\r\n// . Attack function for Computer 👾\r\nfunction computerAttack() {\r\n    turn = 'Player One';\r\n    let random = Math.ceil(Math.random() * 99);\r\n\r\n    if (!attacked.includes(random)) {\r\n        attacked.push(random);\r\n\r\n        if (board[random] !== '') {\r\n            if (soloPlayerGrids[random].style.background !== 'red' && soloPlayerGrids[random].style.background !== 'rgb(255, 255, 255)') {\r\n                soloPlayerGrids[random].style.background = 'red';\r\n                //notifyPlayers(turn); // changes turn\r\n                (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetHit)();\r\n                board.splice(random, 1, '');\r\n            \r\n            }\r\n        } else {\r\n            if (soloPlayerGrids[random].style.background !== 'rgb(255, 255, 255)' && soloPlayerGrids[random].style.background !== 'red') {\r\n                //notifyPlayers(turn);\r\n                (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetMiss)();\r\n                soloPlayerGrids[random].style.background = 'rgb(255, 255, 255)';\r\n            }\r\n        };\r\n    } else {\r\n        computerAttack();\r\n        checkBoard();\r\n    };\r\n};\r\n\r\n\r\n// 7. Check the board after every iteration to see if the game is won.\r\nfunction checkBoard() {\r\n    let count = 0;\r\n    let count2 = 0;\r\n\r\n    soloPlayerGrids.forEach(el => {\r\n        if (el.style.background === 'red') {\r\n            count++;\r\n        }\r\n    });\r\n\r\n    AIGrids.forEach(el => {\r\n        if (el.style.background === 'red') {\r\n            count2++;\r\n        }\r\n    });\r\n\r\n    if (count === 2) {\r\n        setTimeout(() => {\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.closePvC)();\r\n            const outro = document.querySelector('.outroAI');\r\n            const winner = document.querySelector('.declareWinner2');\r\n            outro.style.display = 'grid';\r\n            const message = document.createElement('p');\r\n            message.classList.add('winnerStyle');\r\n            message.textContent = 'Computer wins 🏋️';\r\n\r\n            if (winner.firstChild) {\r\n                while(winner.firstChild) {\r\n                    winner.removeChild(winner.firstChild);\r\n                };\r\n            };\r\n\r\n            winner.appendChild(message);\r\n        }, 2000);\r\n    };\r\n\r\n    if (count2 === 2) {\r\n        setTimeout(() => {\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.closePvC)(); \r\n            const outro = document.querySelector('.outroAI');\r\n            outro.style.display = 'grid';\r\n            const winner = document.querySelector('.declareWinner2');\r\n            const message = document.createElement('p');\r\n            message.classList.add('winnerStyle');\r\n            if (thePlayer) {\r\n                message.textContent = `${thePlayer.name} wins 🏋️`;\r\n            } else {\r\n                message.textContent = 'Player One wins 🏋️';\r\n            };\r\n\r\n            if (winner.firstChild) {\r\n                while(winner.firstChild) {\r\n                    winner.removeChild(winner.firstChild);\r\n                };\r\n            };\r\n\r\n            winner.appendChild(message);\r\n        }, 2000);\r\n    };\r\n};\r\n\r\n\r\n//  Make the player able to place ships.\r\nsoloPlayerGrids.forEach(el => {\r\n    // 1. Event One\r\n    el.addEventListener('mouseover', () => {\r\n        if (el.matches(':hover')) {\r\n            if (foo === 'destroyer' || foo === 'submarine') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const arr = [one, two];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                    // make sure it doesn't change color of already placed ships\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('soloIndex'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                    const arr = [one, two];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo === 'cruiser') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const arr = [one, two, three];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('soloIndex'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                    const threei = Number(onei + 20);\r\n                    const three = document.querySelector(`[soloIndex='${threei}']`);\r\n                    const arr = [one, two, three];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo === 'battleship') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const four = three.nextElementSibling;\r\n                    const arr = [one, two, three, four];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('soloIndex'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                    const threei = Number(onei + 20);\r\n                    const three = document.querySelector(`[soloIndex='${threei}']`);\r\n                    const fouri = Number(onei + 30);\r\n                    const four = document.querySelector(`[soloIndex='${fouri}']`);\r\n                    const arr = [one, two, three, four];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo === 'carrier') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const four = three.nextElementSibling;\r\n                    const five = four.nextElementSibling;\r\n                    const arr = [one, two, three, four, five];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)';\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('soloIndex'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                    const threei = Number(onei + 20);\r\n                    const three = document.querySelector(`[soloIndex='${threei}']`);\r\n                    const fouri = Number(onei + 30);\r\n                    const four = document.querySelector(`[soloIndex='${fouri}']`);\r\n                    const fivei = Number(onei + 40);\r\n                    const five = document.querySelector(`[soloIndex='${fivei}']`)\r\n                    const arr = [one, two, three, four, five];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)';\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n    }});\r\n    // 2. Event Two\r\n    el.addEventListener('mouseout', () => {\r\n        if (foo === 'destroyer' || foo === 'submarine') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const arr = [one, two];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('soloIndex'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                const arr = [one, two];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo === 'cruiser') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const arr = [one, two, three];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('soloIndex'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                const threei = Number(onei + 20);\r\n                const three = document.querySelector(`[soloIndex='${threei}']`)\r\n                const arr = [one, two, three];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo === 'battleship') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const four = three.nextElementSibling;\r\n                const arr = [one, two, three, four];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('soloIndex'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                const threei = Number(onei + 20);\r\n                const three = document.querySelector(`[soloIndex='${threei}']`)\r\n                const fouri = Number(onei + 30);\r\n                const four = document.querySelector(`[soloIndex='${fouri}']`);\r\n                const arr = [one, two, three, four];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo === 'carrier') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const four = three.nextElementSibling;\r\n                const five = four.nextElementSibling;\r\n                const arr = [one, two, three, four, five];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('soloIndex'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[soloIndex='${twoi}']`);\r\n                const threei = Number(onei + 20);\r\n                const three = document.querySelector(`[soloIndex='${threei}']`)\r\n                const fouri = Number(onei + 30);\r\n                const four = document.querySelector(`[soloIndex='${fouri}']`);\r\n                const fivei = Number(onei + 40);\r\n                const five = document.querySelector(`[soloIndex='${fivei}']`);\r\n                const arr = [one, two, three, four, five];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // 3. Event Three\r\n    el.addEventListener('click', (e) => {\r\n        if (foo !== 'attack') {\r\n            setShips(e);\r\n        }\r\n        checkBoard();\r\n    }); \r\n});\r\n\r\n\r\nAIGrids.forEach(el => {\r\n    el.addEventListener('click', (e) => {\r\n        if (foo === 'attack') {\r\n            const currentIndex = Number(e.target.getAttribute('aiIndex'));\r\n\r\n            if (attacked2.includes(currentIndex)) {\r\n                alert('try again');\r\n            } else {\r\n                attack(e);\r\n                attacked2.push(currentIndex);\r\n\r\n                setTimeout(() => {\r\n                    computerAttack();\r\n                    checkBoard();\r\n                }, 2000);    \r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n\r\n// Starting over or playing again logic\r\nreturnHome.addEventListener('click', () => {\r\n    const outro = document.querySelector('.outroAI');\r\n    const intro = document.querySelector('.intro');\r\n\r\n    // 1. Clear the outro and display intro\r\n    outro.style.display = 'none';\r\n    intro.style.display = 'grid';\r\n\r\n    // 2. Clear the dom and also the dom board array\r\n    soloPlayerGrids.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n\r\n    AIGrids.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n\r\n    // 3. Resetting all conditions to start the game again\r\n    newBoard.clearBoard(board);\r\n    newBoard2.clearBoard(board2);\r\n    foo = 'destroyer';\r\n    foo2 = 'destroyer';\r\n    covered = [];\r\n    covered2 = [];\r\n\r\n    // 4. Reset the winner declaration message in the outro modal\r\n    const winner = document.querySelector('.declareWinner');\r\n    while (winner.firstChild) {\r\n        winner.removeChild(winner.lastChild);\r\n    };\r\n    \r\n    // 5. Reset turn back to player one\r\n    turn = 'Player One';\r\n\r\n    // 6.\r\n    aiBoardFilled = false;\r\n    playing = false;\r\n    \r\n    // 7.\r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.closePvC)();\r\n});\r\n\r\nplayAgain.addEventListener('click', () => {\r\n    const outro = document.querySelector('.outroAI');\r\n\r\n    // 1. Clear the outro and display intro\r\n    outro.style.display = 'none';\r\n\r\n    // 2. Clear the dom and also the dom board array\r\n    soloPlayerGrids.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n\r\n    AIGrids.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n    \r\n    // 3. Resetting all conditions to start the game again\r\n    newBoard.clearBoard(board);\r\n    newBoard2.clearBoard(board2);\r\n    foo = 'destroyer';\r\n    foo2 = 'destroyer';\r\n    covered = [];\r\n    covered2 = [];\r\n    attacked = []; \r\n    attacked2 = []; \r\n\r\n    // 4. Reset the winner declaration message in the outro modal\r\n    const winner = document.querySelector('.declareWinner2');\r\n    while (winner.firstChild) {\r\n        winner.removeChild(winner.lastChild);\r\n    };\r\n\r\n    // 5. Reset turn back to player one\r\n    turn = 'Player One';\r\n\r\n    // 6.\r\n    aiBoardFilled = false;\r\n    playing = false;\r\n\r\n    // 7.\r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.showPvC)();\r\n});\r\n\n\n//# sourceURL=webpack://jest/./src/modules/AI.js?");

/***/ }),

/***/ "./src/modules/View.js":
/*!*****************************!*\
  !*** ./src/modules/View.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util_domutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/domutil */ \"./src/modules/util/domutil.js\");\n\r\n\r\n\r\nconst gameBoard = __webpack_require__(/*! ../modules/factories/gameboard */ \"./src/modules/factories/gameboard.js\");\r\nconst Ship = __webpack_require__(/*! ../modules/factories/shipfactory */ \"./src/modules/factories/shipfactory.js\");\r\nconst Player = __webpack_require__(/*! ../modules/factories/playerfactory */ \"./src/modules/factories/playerfactory.js\");\r\n\r\n// grid one is grid, grid two is gridd.\r\nconst grids = document.querySelectorAll('.grid');\r\nconst gridds = document.querySelectorAll('.gridd');\r\nconst directionBtn = document.getElementById('changeDirection');\r\n\r\n// Outro related dom elements\r\nconst returnHome = document.getElementById('returnHome');\r\nconst playAgain = document.getElementById('playAgain');\r\n// Modal related dom elements\r\nconst input1 = document.getElementById('playerOne');\r\nconst input2 = document.getElementById('playerTwo');\r\nconst p1Btn = document.getElementById('playerOneBtn');\r\nconst p2Btn = document.getElementById('playerTwoBtn');\r\n// Starting game \r\nconst startGame = document.getElementById('playGame'); // player vs player\r\n\r\n\r\n\r\n// 🚢🚢🚢 Game Assets are all listed below\r\n//let currentDirection = 'X';\r\nlet currentDirection = _util_domutil__WEBPACK_IMPORTED_MODULE_0__.direction;\r\nlet foo = 'destroyer';\r\nlet foo2 = 'destroyer';\r\nlet playerOne;\r\nlet playerTwo;\r\nlet turn = 'Player One';\r\n\r\nconst newBoard = new gameBoard();\r\nconst board = newBoard.createBoard();\r\nlet covered = []; // this arr keeps track of all the indexes that are covered in the board.\r\n// \r\nconst newBoard2 = new gameBoard();\r\nconst board2 = newBoard2.createBoard2();\r\nlet covered2 = []; // this arr keeps track of all the indexes that are covered in the board.\r\n\r\nconst destroyer = new Ship('destroyer', 2);\r\nconst submarine = new Ship('submarine', 2);\r\nconst cruiser = new Ship('cruiser', 3);\r\nconst battleship = new Ship('battleship', 4);\r\nconst carrier = new Ship('carrier', 5);\r\n\r\nconst destroyer2 = new Ship('destroyer', 2);\r\nconst submarine2 = new Ship('submarine', 2);\r\nconst cruiser2 = new Ship('cruiser', 3);\r\nconst battleship2 = new Ship('battleship', 4);\r\nconst carrier2 = new Ship('carrier', 5);\r\n\r\n\r\nfunction changeDirection() {\r\n    if (currentDirection === 'X') {\r\n        currentDirection = 'Y';\r\n    } else if (currentDirection === 'Y') {\r\n        currentDirection = 'X';\r\n    }\r\n};\r\n\r\n\r\nfunction shipPlacement(e, length) {\r\n    const target = e.target;\r\n    const index = Number(target.getAttribute('index'));\r\n\r\n    const arr = []; // make sure the first number >= 0 && last number <= 99.\r\n\r\n    if (currentDirection === 'X') {\r\n        const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisX)(index);\r\n\r\n        if (length === 2 && position + length <= 10 && foo === 'destroyer' || foo === 'submarine') {\r\n            const one = index;\r\n            const two = index + 1;\r\n            \r\n            if (covered.includes(one) || covered.includes(two)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1);\r\n                covered.push(index, index + 1);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                if (foo === 'destroyer') {\r\n                    newBoard.placeShipX(index, length, destroyer.name, destroyer.name);\r\n                    foo = 'submarine';\r\n                } else if (foo === 'submarine') {\r\n                    newBoard.placeShipX(index, length, submarine.name, submarine.name);\r\n                    foo = 'cruiser';\r\n                }\r\n            }\r\n        } else if (length === 3 && position + length <= 10) {\r\n            const one = index; \r\n            const two = index + 1;\r\n            const three = index + 2;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1, index + 2);\r\n                covered.push(index, index + 1, index + 2);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipX(index, length, cruiser.name, cruiser.name, cruiser.name);\r\n                foo = 'battleship';\r\n            }\r\n        } else if (length === 4 && position + length <= 10) {\r\n            const one = index;\r\n            const two = index + 1;\r\n            const three = index + 2;\r\n            const four = index + 3;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1, index + 2, index + 3);\r\n                covered.push(index, index + 1, index + 2, index + 3);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipX(index, length, battleship.name, battleship.name, battleship.name, battleship.name);\r\n                foo = 'carrier';\r\n            }\r\n        } else if (length === 5 && position + length <= 10) { // or could be lenght < 10\r\n            const one = index; \r\n            const two = index + 1;\r\n            const three = index + 2;\r\n            const four = index + 3;\r\n            const five = index + 4;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four) || covered.includes(five)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1, index + 2, index + 3, index + 4);\r\n                covered.push(index, index + 1, index + 2, index + 3, index + 4);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n                \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n                \r\n                newBoard.placeShipX(index, length, carrier.name, carrier.name, carrier.name, carrier.name, carrier.name);\r\n\r\n                setTimeout(() => {\r\n                    foo = 'attack';\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    grids.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n            }\r\n        } \r\n    };\r\n\r\n    if (currentDirection === 'Y') {\r\n        const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisY)(index);\r\n\r\n        if (length === 2 && position + length <= 82 && foo === 'destroyer' || foo === 'submarine') {\r\n            const one = index;\r\n            const two = index + 10;\r\n\r\n            if (covered.includes(one) || covered.includes(two)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10);\r\n                covered.push(index, index + 10);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                if (foo === 'destroyer') {\r\n                    newBoard.placeShipY(length, foo, one, two);\r\n                    foo = 'submarine';\r\n                } else if (foo === 'submarine') {\r\n                    newBoard.placeShipY(length, foo, one, two);\r\n                    foo = 'cruiser';\r\n                }\r\n            };\r\n        } else if (length === 3 && position + length <= 73) {\r\n            const one = index; \r\n            const two = index + 10;\r\n            const three = index + 20;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10, index + 20);\r\n                covered.push(index, index + 10, index + 20)\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipY(length, foo, one, two, three)\r\n                foo = 'battleship';\r\n            }\r\n        } else if (length === 4 && position + length <= 64) {\r\n            const one = index;\r\n            const two = index + 10;\r\n            const three = index + 20;\r\n            const four = index + 30;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10, index + 20, index + 30);\r\n                covered.push(index, index + 10, index + 20, index + 30);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n                \r\n                newBoard.placeShipY(length, foo, one, two, three, four)\r\n                foo = 'carrier';\r\n            }\r\n        } else if (length === 5 && position + length <= 55) {\r\n            const one = index; \r\n            const two = index + 10;\r\n            const three = index + 20;\r\n            const four = index + 30;\r\n            const five = index + 40;\r\n\r\n            if (covered.includes(one) || covered.includes(two) || covered.includes(three) || covered.includes(four) || covered.includes(five)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10, index + 20, index + 30, index + 40);\r\n                covered.push(index, index + 10, index + 20, index + 30, index + 40);\r\n                const divs = Array.from(grids);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard.placeShipY(length, foo, one, two, three, four, five);\r\n\r\n                setTimeout(() => {\r\n                    foo = 'attack';\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    grids.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n            }\r\n        };\r\n    };\r\n};\r\n\r\nfunction shipPlacement2(e, length) {\r\n    const target = e.target;\r\n    const index = Number(target.getAttribute('index'));\r\n\r\n    const arr = []; // make sure the first number >= 0 && last number <= 99.\r\n\r\n    if (currentDirection === 'X') {\r\n        const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisX)(index);\r\n\r\n        if (length === 2 && position + length <= 10 && foo2 === 'destroyer' || foo2 === 'submarine') {\r\n            const one = index;\r\n            const two = index + 1;\r\n            \r\n            if (covered2.includes(one) || covered2.includes(two)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1);\r\n                covered2.push(index, index + 1);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                if (foo2 === 'destroyer') {\r\n                    newBoard2.placeShipX2(index, length, destroyer2.name, destroyer2.name);\r\n                    foo2 = 'submarine';\r\n                } else if (foo2 === 'submarine') {\r\n                    newBoard2.placeShipX2(index, length, submarine2.name, submarine2.name);\r\n                    foo2 = 'cruiser';\r\n                }\r\n            }\r\n        } else if (length === 3 && position + length <= 10) {\r\n            const one = index; \r\n            const two = index + 1;\r\n            const three = index + 2;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1, index + 2);\r\n                covered2.push(index, index + 1, index + 2);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard2.placeShipX2(index, length, cruiser2.name, cruiser2.name, cruiser2.name);\r\n                foo2 = 'battleship';\r\n            }\r\n        } else if (length === 4 && position + length <= 10) {\r\n            const one = index;\r\n            const two = index + 1;\r\n            const three = index + 2;\r\n            const four = index + 3;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three) || covered2.includes(four)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1, index + 2, index + 3);\r\n                covered2.push(index, index + 1, index + 2, index + 3);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard2.placeShipX2(index, length, battleship2.name, battleship2.name, battleship2.name, battleship2.name);\r\n                foo2 = 'carrier';\r\n            }\r\n        } else if (length === 5 && position + length <= 10) { // or could be lenght < 10\r\n            const one = index; \r\n            const two = index + 1;\r\n            const three = index + 2;\r\n            const four = index + 3;\r\n            const five = index + 4;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three) || covered2.includes(four) || covered2.includes(five)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 1, index + 2, index + 3, index + 4);\r\n                covered2.push(index, index + 1, index + 2, index + 3, index + 4);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n                \r\n                newBoard2.placeShipX2(index, length, carrier2.name, carrier2.name, carrier2.name, carrier2.name, carrier2.name);\r\n                \r\n                setTimeout(() => {\r\n                    foo2 = 'attack';\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    gridds.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n            }\r\n        } \r\n    };\r\n\r\n    if (currentDirection === 'Y') {\r\n        const position = (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.changeBasisY)(index);\r\n\r\n        if (length === 2 && position + length <= 82 && foo2 === 'destroyer' || foo2 === 'submarine') {\r\n            const one = index;\r\n            const two = index + 10;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10);\r\n                covered2.push(index, index + 10);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                if (foo2 === 'destroyer') {\r\n                    newBoard2.placeShipY2(length, foo2, one, two);\r\n                    foo2 = 'submarine';\r\n                } else if (foo2 === 'submarine') {\r\n                    newBoard2.placeShipY2(length, foo2, one, two);\r\n                    foo2 = 'cruiser';\r\n                }\r\n            };\r\n        } else if (length === 3 && position + length <= 73) {\r\n            const one = index; \r\n            const two = index + 10;\r\n            const three = index + 20;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10, index + 20);\r\n                covered2.push(index, index + 10, index + 20)\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard2.placeShipY2(length, foo2, one, two, three)\r\n                foo2 = 'battleship';\r\n            }\r\n        } else if (length === 4 && position + length <= 64) {\r\n            const one = index;\r\n            const two = index + 10;\r\n            const three = index + 20;\r\n            const four = index + 30;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three) || covered2.includes(four)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10, index + 20, index + 30);\r\n                covered2.push(index, index + 10, index + 20, index + 30);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n                \r\n                newBoard2.placeShipY2(length, foo2, one, two, three, four)\r\n                foo2 = 'carrier';\r\n            }\r\n        } else if (length === 5 && position + length <= 55) {\r\n            const one = index; \r\n            const two = index + 10;\r\n            const three = index + 20;\r\n            const four = index + 30;\r\n            const five = index + 40;\r\n\r\n            if (covered2.includes(one) || covered2.includes(two) || covered2.includes(three) || covered2.includes(four) || covered2.includes(five)) {\r\n                return;\r\n            } else {\r\n                arr.push(index, index + 10, index + 20, index + 30, index + 40);\r\n                covered2.push(index, index + 10, index + 20, index + 30, index + 40);\r\n                const divs = Array.from(gridds);\r\n                const curDivs = [];\r\n    \r\n                arr.forEach(el => {\r\n                    curDivs.push(divs[el]);\r\n                });\r\n    \r\n                curDivs.forEach(el => {\r\n                    el.style.background = '#41ffb0';\r\n                });\r\n\r\n                newBoard2.placeShipY2(length, foo2, one, two, three, four, five);\r\n\r\n                setTimeout(() => {\r\n                    foo2 = 'attack';\r\n                    let interval = 1;\r\n                    let promise = Promise.resolve();\r\n\r\n                    gridds.forEach(el => {\r\n                        promise = promise.then(() => {\r\n                            el.style.background = '#22aeff';\r\n                            el.classList.add('popup');\r\n                            return new Promise((resolve) => {\r\n                                setTimeout(resolve, interval);\r\n                            });\r\n                        });\r\n                    });\r\n                }, 1000);\r\n            }\r\n        };\r\n    };\r\n};\r\n\r\n\r\nfunction setShips(e) {\r\n    if (foo === 'destroyer') {\r\n        shipPlacement(e, 2);\r\n    }\r\n\r\n    if (foo === 'submarine') {\r\n        shipPlacement(e, 2);\r\n    }\r\n\r\n    if (foo === 'cruiser') {\r\n        shipPlacement(e, 3);\r\n    }\r\n\r\n    if (foo === 'battleship') {\r\n        shipPlacement(e, 4);\r\n    }\r\n\r\n    if (foo === 'carrier') {\r\n        shipPlacement(e, 5);\r\n    }\r\n};\r\n\r\nfunction setShips2(e) {\r\n    if (foo2 === 'destroyer') {\r\n        shipPlacement2(e, 2);\r\n    }\r\n\r\n    if (foo2 === 'submarine') {\r\n        shipPlacement2(e, 2);\r\n    }\r\n\r\n    if (foo2 === 'cruiser') {\r\n        shipPlacement2(e, 3);\r\n    }\r\n\r\n    if (foo2 === 'battleship') {\r\n        shipPlacement2(e, 4);\r\n    }\r\n\r\n    if (foo2 === 'carrier') {\r\n        shipPlacement2(e, 5);\r\n    }\r\n};\r\n\r\n\r\nfunction attack(e) {\r\n    const target = e.target;\r\n    const index = Number(target.getAttribute('index'));\r\n\r\n    if (board[index] !== '') {\r\n        if (grids[index].style.background !== 'red' && grids[index].style.background !== 'rgb(255, 255, 255)') {\r\n            const shipType = board[index];\r\n            grids[index].style.background = 'red';\r\n            turn = 'Player Two';\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.notifyPlayers)(turn); // changes turn\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetHit)();\r\n\r\n            if (shipType === 'destroyer') {\r\n                destroyer.hit(index);\r\n                destroyer.isSunk();\r\n                board.splice(index, 1, '');\r\n            } else if (shipType === 'submarine') {\r\n                submarine.hit(index);\r\n                submarine.isSunk();\r\n                board.splice(index, 1, '');\r\n            } else if (shipType === 'cruiser') {\r\n                cruiser.hit(index);\r\n                cruiser.isSunk();\r\n                board.splice(index, 1, '');\r\n            } else if (shipType === 'battleship') {\r\n                battleship.hit(index);\r\n                battleship.isSunk();\r\n                board.splice(index, 1, '');\r\n            } else if (shipType === 'carrier') {\r\n                carrier.hit();\r\n                carrier.isSunk();\r\n                board.splice(index, 1, '');\r\n            }\r\n        }\r\n    } else {\r\n        if (grids[index].style.background !== 'rgb(255, 255, 255)' && grids[index].style.background !== 'red') {\r\n            turn = 'Player Two'; \r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.notifyPlayers)(turn);\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetMiss)();\r\n            grids[index].style.background = 'rgb(255, 255, 255)';\r\n        }\r\n    };\r\n};\r\n\r\nfunction attack2(e) {\r\n    const target = e.target;\r\n    const index = Number(target.getAttribute('index'));\r\n\r\n    if (board2[index] !== '') {\r\n        if (gridds[index].style.background !== 'red' && gridds[index].style !== 'rgb(255, 255, 255)') {\r\n            const shipType = board2[index];\r\n            gridds[index].style.background = 'red';\r\n            turn = 'Player One';\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.notifyPlayers)(turn);\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetHit)();\r\n\r\n            if (shipType === 'destroyer') {\r\n                destroyer2.hit(index);\r\n                destroyer2.isSunk();\r\n                board2.splice(index, 1, '');\r\n            } else if (shipType === 'submarine') {\r\n                submarine2.hit(index);\r\n                submarine2.isSunk();\r\n                board2.splice(index, 1, '');\r\n            } else if (shipType === 'cruiser') {\r\n                cruiser2.hit(index);\r\n                cruiser2.isSunk();\r\n                board2.splice(index, 1, '');\r\n            } else if (shipType === 'battleship') {\r\n                battleship2.hit(index);\r\n                battleship2.isSunk();\r\n                board2.splice(index, 1, '');\r\n            } else if (shipType === 'carrier') {\r\n                carrier2.hit();\r\n                carrier2.isSunk();\r\n                board2.splice(index, 1, '');\r\n            }\r\n        }\r\n    } else {\r\n        if (gridds[index].style.background !== 'rgb(255, 255, 255)' && gridds[index].style.background !== 'red') { \r\n            turn = 'Player One';\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.notifyPlayers)(turn);\r\n            (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.targetMiss)();\r\n            gridds[index].style.background = 'rgb(255, 255, 255)';\r\n        }\r\n    };\r\n};\r\n\r\n\r\nfunction checkBoard() {\r\n    let count = 0;\r\n\r\n    grids.forEach(el => {\r\n        if (el.style.background === 'red') {\r\n            count++;\r\n        }\r\n    });\r\n\r\n    if (count === 2) {\r\n        setTimeout(() => {\r\n            const outro = document.querySelector('.outro');\r\n            const winner = document.querySelector('.declareWinner');\r\n            outro.style.display = 'grid';\r\n            const message = document.createElement('p');\r\n            message.classList.add('winnerStyle');\r\n\r\n            if (winner.firstChild) {\r\n                while(winner.firstChild) {\r\n                    winner.removeChild(winner.firstChild);\r\n                };\r\n            };\r\n\r\n            if (playerOne) {\r\n                message.textContent = `${playerOne.name} wins 🏋️`;\r\n            } else {\r\n                message.textContent = 'Player One wins 🏋️';\r\n            };\r\n\r\n            winner.appendChild(message);\r\n        }, 2000);\r\n    };\r\n};\r\n\r\nfunction checkBoard2() {\r\n    let count = 0;\r\n\r\n    gridds.forEach(el => {\r\n        if (el.style.background === 'red') {\r\n            count++;\r\n        }\r\n    });\r\n\r\n    if (count === 2) {\r\n        setTimeout(() => {\r\n            const outro = document.querySelector('.outro');\r\n            const winner = document.querySelector('.declareWinner');\r\n            outro.style.display = 'grid';\r\n            const message = document.createElement('p');\r\n            message.classList.add('winnerStyle');\r\n\r\n            if (winner.firstChild) {\r\n                while(winner.firstChild) {\r\n                    winner.removeChild(winner.firstChild);\r\n                };\r\n            };\r\n\r\n            if (playerTwo) {\r\n                message.textContent = `${playerTwo.name} wins 🏋️`;\r\n            } else {\r\n                message.textContent = 'Player Two wins 🏋️';\r\n            }\r\n            \r\n            winner.appendChild(message);\r\n        }, 2000);\r\n    };\r\n};\r\n\r\n// Event Listeners \r\n\r\ngrids.forEach(el => {\r\n    // 1. Event One\r\n    el.addEventListener('mouseover', () => {\r\n        if (el.matches(':hover')) {\r\n            if (foo === 'destroyer' || foo === 'submarine') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const arr = [one, two];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                    // make sure it doesn't change color of already placed ships\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[index='${twoi}']`);\r\n                    const arr = [one, two];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo === 'cruiser') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const arr = [one, two, three];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[index='${twoi}']`);\r\n                    const threei = Number(onei + 20);\r\n                    const three = document.querySelector(`[index='${threei}']`);\r\n                    const arr = [one, two, three];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n                    console.log('going');\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo === 'battleship') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const four = three.nextElementSibling;\r\n                    const arr = [one, two, three, four];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[index='${twoi}']`);\r\n                    const threei = Number(onei + 20);\r\n                    const three = document.querySelector(`[index='${threei}']`);\r\n                    const fouri = Number(onei + 30);\r\n                    const four = document.querySelector(`[index='${fouri}']`);\r\n                    const arr = [one, two, three, four];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo === 'carrier') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const four = three.nextElementSibling;\r\n                    const five = four.nextElementSibling;\r\n                    const arr = [one, two, three, four, five];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)';\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = document.querySelector(`[index='${twoi}']`);\r\n                    const threei = Number(onei + 20);\r\n                    const three = document.querySelector(`[index='${threei}']`);\r\n                    const fouri = Number(onei + 30);\r\n                    const four = document.querySelector(`[index='${fouri}']`);\r\n                    const fivei = Number(onei + 40);\r\n                    const five = document.querySelector(`[index='${fivei}']`)\r\n                    const arr = [one, two, three, four, five];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)';\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n    }});\r\n    // 2. Event Two\r\n    el.addEventListener('mouseout', () => {\r\n        if (foo === 'destroyer' || foo === 'submarine') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const arr = [one, two];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[index='${twoi}']`);\r\n                const arr = [one, two];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo === 'cruiser') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const arr = [one, two, three];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[index='${twoi}']`);\r\n                const threei = Number(onei + 20);\r\n                const three = document.querySelector(`[index='${threei}']`)\r\n                const arr = [one, two, three];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo === 'battleship') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const four = three.nextElementSibling;\r\n                const arr = [one, two, three, four];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[index='${twoi}']`);\r\n                const threei = Number(onei + 20);\r\n                const three = document.querySelector(`[index='${threei}']`)\r\n                const fouri = Number(onei + 30);\r\n                const four = document.querySelector(`[index='${fouri}']`);\r\n                const arr = [one, two, three, four];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo === 'carrier') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const four = three.nextElementSibling;\r\n                const five = four.nextElementSibling;\r\n                const arr = [one, two, three, four, five];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = document.querySelector(`[index='${twoi}']`);\r\n                const threei = Number(onei + 20);\r\n                const three = document.querySelector(`[index='${threei}']`)\r\n                const fouri = Number(onei + 30);\r\n                const four = document.querySelector(`[index='${fouri}']`);\r\n                const fivei = Number(onei + 40);\r\n                const five = document.querySelector(`[index='${fivei}']`);\r\n                const arr = [one, two, three, four, five];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // 3. Event Three\r\n    el.addEventListener('click', (e) => {\r\n        if (foo !== 'attack') {\r\n            setShips(e);\r\n        }\r\n\r\n        if (foo === 'attack' && turn === 'Player One') { \r\n            attack(e);\r\n            checkBoard();\r\n        }\r\n    }); \r\n});\r\n\r\ngridds.forEach(el => {\r\n    // 1. Event One\r\n    el.addEventListener('mouseover', () => {\r\n        if (el.matches(':hover')) {\r\n            if (foo2 === 'destroyer' || foo2 === 'submarine') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const arr = [one, two];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                    const arr = [one, two[0]];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo2 === 'cruiser') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const arr = [one, two, three];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                    const threei = Number(onei + 20);\r\n                    const three = Array.from(document.querySelectorAll(`[index='${threei}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n\r\n                    const arr = [one, two[0], three[0]];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo2 === 'battleship') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const four = three.nextElementSibling;\r\n                    const arr = [one, two, three, four];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                    const threei = Number(onei + 20);\r\n                    const three = Array.from(document.querySelectorAll(`[index='${threei}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                    const fouri = Number(onei + 30);\r\n                    const four = Array.from(Array.from(document.querySelectorAll(`[index='${fouri}'], [class='.gridd']`)).filter(el => el.className === 'gridd'));\r\n\r\n                    const arr = [one, two[0], three[0], four[0]];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)'\r\n                        }\r\n                    });\r\n                }\r\n            } else if (foo2 === 'carrier') {\r\n                if (currentDirection === 'X') {\r\n                    const one = el;\r\n                    const two = el.nextElementSibling;\r\n                    const three = two.nextElementSibling;\r\n                    const four = three.nextElementSibling;\r\n                    const five = four.nextElementSibling;\r\n                    const arr = [one, two, three, four, five];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)';\r\n                        }\r\n                    });\r\n                } else if (currentDirection === 'Y') {\r\n                    const one = el;\r\n                    const onei = Number(el.getAttribute('index'));\r\n                    const twoi = Number(onei + 10);\r\n                    const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                    const threei = Number(onei + 20);\r\n                    const three = Array.from(document.querySelectorAll(`[index='${threei}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                    const fouri = Number(onei + 30);\r\n                    const four = Array.from(Array.from(document.querySelectorAll(`[index='${fouri}'], [class='.gridd']`)).filter(el => el.className === 'gridd'));\r\n                    const fivei = Number(onei + 40);\r\n                    const five = Array.from(Array.from(document.querySelectorAll(`[index='${fivei}'], [class='.gridd']`)).filter(el => el.className === 'gridd'));\r\n\r\n                    const arr = [one, two[0], three[0], four[0], five[0]];\r\n\r\n                    if (one.style.background === 'rgb(65, 255, 176)') {\r\n                        return;\r\n                    }\r\n\r\n                    arr.forEach(el => {\r\n                        if (el.style.background === 'rgb(65, 255, 176)') {\r\n                            return;\r\n                        } else {\r\n                            el.style.background = 'rgb(68, 17, 255)';\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n    }});\r\n    // 2. Event Two\r\n    el.addEventListener('mouseout', () => {\r\n        if (foo2 === 'destroyer' || foo2 === 'submarine') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const arr = [one, two];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                const arr = [one, two[0]];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo2 === 'cruiser') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const arr = [one, two, three];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                const threei = Number(onei + 20);\r\n                const three = Array.from(document.querySelectorAll(`[index='${threei}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n\r\n                const arr = [one, two[0], three[0]];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo2 === 'battleship') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const four = three.nextElementSibling;\r\n                const arr = [one, two, three, four];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                const threei = Number(onei + 20);\r\n                const three = Array.from(document.querySelectorAll(`[index='${threei}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                const fouri = Number(onei + 30);\r\n                const four = Array.from(Array.from(document.querySelectorAll(`[index='${fouri}'], [class='.gridd']`)).filter(el => el.className === 'gridd'));\r\n\r\n                const arr = [one, two[0], three[0], four[0]];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        } else if (foo2 === 'carrier') {\r\n            if (currentDirection === 'X') {\r\n                const one = el;\r\n                const two = el.nextElementSibling;\r\n                const three = two.nextElementSibling;\r\n                const four = three.nextElementSibling;\r\n                const five = four.nextElementSibling;\r\n                const arr = [one, two, three, four, five];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            } else if (currentDirection === 'Y') {\r\n                const one = el;\r\n                const onei = Number(el.getAttribute('index'));\r\n                const twoi = Number(onei + 10);\r\n                const two = Array.from(document.querySelectorAll(`[index='${twoi}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                const threei = Number(onei + 20);\r\n                const three = Array.from(document.querySelectorAll(`[index='${threei}'], [class='.gridd']`)).filter(el => el.className === 'gridd');\r\n                const fouri = Number(onei + 30);\r\n                const four = Array.from(Array.from(document.querySelectorAll(`[index='${fouri}'], [class='.gridd']`)).filter(el => el.className === 'gridd'));\r\n                const fivei = Number(onei + 40);\r\n                const five = Array.from(Array.from(document.querySelectorAll(`[index='${fivei}'], [class='.gridd']`)).filter(el => el.className === 'gridd'));\r\n\r\n                const arr = [one, two[0], three[0], four[0], five[0]];\r\n\r\n                arr.forEach(el => {\r\n                    if (el.style.background === 'rgb(68, 17, 255)') {\r\n                        el.style.background = '';\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    });\r\n    // 3. Event Three\r\n    el.addEventListener('click', (e) => {\r\n        if (foo2 !== 'attack') {\r\n            setShips2(e);\r\n        }\r\n\r\n        if (foo2 === 'attack' && turn === 'Player Two') {\r\n            attack2(e);\r\n            checkBoard2();\r\n        }\r\n    }); \r\n});\r\n\r\n\r\n\r\ndirectionBtn.addEventListener('click', changeDirection);\r\n\r\n\r\n\r\np1Btn.addEventListener('click', () => {\r\n    if (input1.value) {\r\n        playerOne = new Player(input1.value);\r\n        input1.value = '';\r\n    } else {\r\n        playerOne = new Player('Player One');\r\n    }\r\n});\r\n\r\np2Btn.addEventListener('click', () => {\r\n    if (input2.value) {\r\n        playerTwo = new Player(input2.value);\r\n        input2.value = '';\r\n    } else {\r\n        playerTwo = new Player('Player Two');\r\n    }\r\n});\r\n\r\n\r\n// Starting game initally player vs player\r\nstartGame.addEventListener('click', () => {\r\n    // 1. Close the current modal and the intro page\r\n    const intro = document.querySelector('.intro');\r\n    intro.style.display = 'none';\r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.closeModalPvP)();   \r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.showPvP)();\r\n});\r\n\r\n\r\n// playing again or returning to home\r\nreturnHome.addEventListener('click', () => {\r\n    const outro = document.querySelector('.outro');\r\n    const intro = document.querySelector('.intro');\r\n\r\n    // 1. Clear the outro and display intro\r\n    outro.style.display = 'none';\r\n    intro.style.display = 'grid';\r\n\r\n    // 2. Clear the dom and also the dom board array\r\n    grids.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n\r\n    gridds.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n        el.style.display = 'none';\r\n    });\r\n\r\n    // 3. Resetting all conditions to start the game again\r\n    newBoard.clearBoard(board);\r\n    newBoard2.clearBoard(board2);\r\n    foo = 'destroyer';\r\n    foo2 = 'destroyer';\r\n    covered = [];\r\n    covered2 = [];\r\n    \r\n    // 4. Reset the winner declaration message in the outro modal\r\n    const winner = document.querySelector('.declareWinner');\r\n    while (winner.firstChild) {\r\n        winner.removeChild(winner.lastChild);\r\n    };\r\n\r\n    // 5. Reset turn back to player one\r\n    turn = 'Player One';\r\n\r\n    // 6. close the pvp & pvc board \r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.closePvP)();\r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.clearNotifyBoard)();\r\n});\r\n\r\nplayAgain.addEventListener('click', () => {\r\n    const outro = document.querySelector('.outro');\r\n\r\n    // 1. Clear the outro and display intro\r\n    outro.style.display = 'none';\r\n\r\n    // 2. Clear the dom and also the dom board array\r\n    grids.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n\r\n    gridds.forEach(el => {\r\n        el.style.background = '#22aeff';\r\n        el.classList.remove('popup');\r\n    });\r\n    \r\n    // 3. Resetting all conditions to start the game again\r\n    newBoard.clearBoard(board);\r\n    newBoard2.clearBoard(board2);\r\n    foo = 'destroyer';\r\n    foo2 = 'destroyer';\r\n    covered = [];\r\n    covered2 = [];\r\n\r\n    // 4. Reset the winner declaration message in the outro modal\r\n    const winner = document.querySelector('.declareWinner');\r\n    while (winner.firstChild) {\r\n        winner.removeChild(winner.lastChild);\r\n    };\r\n\r\n    // 5. Reset turn back to player one\r\n    turn = 'Player One';\r\n    (0,_util_domutil__WEBPACK_IMPORTED_MODULE_0__.clearNotifyBoard)();\r\n});\r\n\n\n//# sourceURL=webpack://jest/./src/modules/View.js?");

/***/ }),

/***/ "./src/modules/factories/gameboard.js":
/*!********************************************!*\
  !*** ./src/modules/factories/gameboard.js ***!
  \********************************************/
/***/ ((module) => {

eval("// 👾 GameBoard Factory Function\r\n\r\nfunction GameBoard() {\r\n    // 1. Create board for the game ( that should be connected with the DOM ).\r\n    let board;\r\n    let board2;\r\n    const missedShots = []; // will records all the missed shots\r\n    \r\n    // 1. ceate board\r\n    const createBoard = () => {\r\n        board = [];\r\n\r\n        while (board.length !== 100) {\r\n            board.push('');\r\n        }\r\n\r\n        return board;\r\n    };\r\n\r\n    // 1.a create board\r\n    const createBoard2 = () => {\r\n        board2 = [];\r\n\r\n        while (board2.length !== 100) {\r\n            board2.push('');\r\n        }\r\n\r\n        return board2;\r\n    };\r\n    \r\n    // 2. Place Ships in the board X-axis.\r\n    const placeShipX = (start, length, name) => {\r\n        // Take the already created ship as an argument and place it in an array. \r\n        if (length === 2) {\r\n            board.splice(start, length, name, name);\r\n        } else if (length === 3) {\r\n            board.splice(start, length, name, name, name);\r\n        } else if (length === 4) {\r\n            board.splice(start, length, name, name, name, name);\r\n        } else if (length === 5) {\r\n            board.splice(start, length, name, name, name, name, name);\r\n        };\r\n    };\r\n\r\n    // 2.a Place Ships in the board \r\n    const placeShipX2 = (start, length, name) => {\r\n        // Take the already created ship as an argument and place it in an array. \r\n        if (length === 2) {\r\n            board2.splice(start, length, name, name);\r\n        } else if (length === 3) {\r\n            board2.splice(start, length, name, name, name);\r\n        } else if (length === 4) {\r\n            board2.splice(start, length, name, name, name, name);\r\n        } else if (length === 5) {\r\n            board2.splice(start, length, name, name, name, name, name);\r\n        };\r\n    };\r\n\r\n    // 3. Place Ships in the board Y-axis.\r\n    const placeShipY = (length, foo, one, two, three, four, five) => {\r\n        if (length === 2) {\r\n            for (let i = 0; i <= board.length; i++) {\r\n                if (foo === 'destroyer') {\r\n                    if (i === one || i === two) {\r\n                        board[i] = 'destroyer';\r\n                    }\r\n                } else if (foo === 'submarine') {\r\n                    if (i === one || i === two) {\r\n                        board[i] = 'submarine';\r\n                    }\r\n                }\r\n            }\r\n        } else if (length === 3) {\r\n            for (let i = 0; i <= board.length; i++) {\r\n                if (i === one || i === two || i === three) {\r\n                    board[i] = 'cruiser';\r\n                }\r\n            }\r\n        } else if (length === 4) {\r\n            for (let i = 0; i <= board.length; i++) {\r\n                if (i === one || i === two || i === three || i === four) {\r\n                    board[i] = 'battleship';\r\n                }\r\n            }\r\n        } else if (length === 5) {\r\n            for (let i = 0; i <= board.length; i++) {\r\n                if (i === one || i === two || i === three || i === four || i === five) {\r\n                    board[i] = 'carrier';\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // 3.a Place Ships in the board Y-axis\r\n    const placeShipY2 = (length, foo2, one, two, three, four, five) => {\r\n        if (length === 2) {\r\n            for (let i = 0; i <= board2.length; i++) {\r\n                if (foo2 === 'destroyer') {\r\n                    if (i === one || i === two) {\r\n                        board2[i] = 'destroyer';\r\n                    }\r\n                } else if (foo2 === 'submarine') {\r\n                    if (i === one || i === two) {\r\n                        board2[i] = 'submarine';\r\n                    }\r\n                }\r\n            }\r\n        } else if (length === 3) {\r\n            for (let i = 0; i <= board2.length; i++) {\r\n                if (i === one || i === two || i === three) {\r\n                    board2[i] = 'cruiser';\r\n                }\r\n            }\r\n        } else if (length === 4) {\r\n            for (let i = 0; i <= board2.length; i++) {\r\n                if (i === one || i === two || i === three || i === four) {\r\n                    board2[i] = 'battleship';\r\n                }\r\n            }\r\n        } else if (length === 5) {\r\n            for (let i = 0; i <= board2.length; i++) {\r\n                if (i === one || i === two || i === three || i === four || i === five) {\r\n                    board2[i] = 'carrier';\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // 4. Clear boards \r\n    const clearBoard = (currentBoard) => {\r\n        currentBoard.forEach((el, i) => {\r\n            if (el !== '') {\r\n                currentBoard.splice(i, 1, '');\r\n            }\r\n        });\r\n\r\n        return currentBoard;\r\n    };\r\n\r\n    return { missedShots, createBoard, createBoard2, placeShipX, placeShipX2, placeShipY, placeShipY2, clearBoard };\r\n};\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = GameBoard;\r\n\n\n//# sourceURL=webpack://jest/./src/modules/factories/gameboard.js?");

/***/ }),

/***/ "./src/modules/factories/playerfactory.js":
/*!************************************************!*\
  !*** ./src/modules/factories/playerfactory.js ***!
  \************************************************/
/***/ ((module) => {

eval("function player(name) {\r\n    return { name };\r\n};\r\n\r\nmodule.exports = player;\n\n//# sourceURL=webpack://jest/./src/modules/factories/playerfactory.js?");

/***/ }),

/***/ "./src/modules/factories/shipfactory.js":
/*!**********************************************!*\
  !*** ./src/modules/factories/shipfactory.js ***!
  \**********************************************/
/***/ ((module) => {

eval("// 🚢 Ship Factory Function\r\n\r\nfunction Ship(name, length) {\r\n    const len = length;\r\n    let sunked = []; // this will be false intially since all newly created ship are not yet sunked.\r\n    const marked = []; // all the places where the ship has been hit.\r\n\r\n    const hit = (number) => {\r\n        marked.push(number);\r\n    }\r\n\r\n    const isSunk = () => {\r\n        if (len === marked.length) {\r\n            sunked.push(true);\r\n        }\r\n    }\r\n\r\n    return { name, length, sunked, marked, hit, isSunk };  \r\n};\r\n\r\n\r\nmodule.exports = Ship;\n\n//# sourceURL=webpack://jest/./src/modules/factories/shipfactory.js?");

/***/ }),

/***/ "./src/modules/util/domhelper.js":
/*!***************************************!*\
  !*** ./src/modules/util/domhelper.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _domutil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domutil */ \"./src/modules/util/domutil.js\");\n\r\n// Intro related dom elements\r\nconst pvpBtn = document.getElementById('pvp');\r\nconst pvpX = document.getElementById('closePvP');\r\nconst pvcBtn = document.getElementById('pvc');\r\nconst pvcX = document.getElementById('closePvC');\r\n// pvcX = \r\n\r\n\r\npvpBtn.addEventListener('click', _domutil__WEBPACK_IMPORTED_MODULE_0__.openModalPvP);\r\npvpX.addEventListener('click', _domutil__WEBPACK_IMPORTED_MODULE_0__.closeModalPvP);\r\npvcBtn.addEventListener('click', _domutil__WEBPACK_IMPORTED_MODULE_0__.openModalPvC);\r\npvcX.addEventListener('click', _domutil__WEBPACK_IMPORTED_MODULE_0__.closeModalPvC);\r\n\n\n//# sourceURL=webpack://jest/./src/modules/util/domhelper.js?");

/***/ }),

/***/ "./src/modules/util/domutil.js":
/*!*************************************!*\
  !*** ./src/modules/util/domutil.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"changeBasisX\": () => (/* binding */ changeBasisX),\n/* harmony export */   \"changeBasisY\": () => (/* binding */ changeBasisY),\n/* harmony export */   \"clearNotifyBoard\": () => (/* binding */ clearNotifyBoard),\n/* harmony export */   \"closeModalPvC\": () => (/* binding */ closeModalPvC),\n/* harmony export */   \"closeModalPvP\": () => (/* binding */ closeModalPvP),\n/* harmony export */   \"closePvC\": () => (/* binding */ closePvC),\n/* harmony export */   \"closePvP\": () => (/* binding */ closePvP),\n/* harmony export */   \"direction\": () => (/* binding */ direction),\n/* harmony export */   \"notifyPlayers\": () => (/* binding */ notifyPlayers),\n/* harmony export */   \"openModalPvC\": () => (/* binding */ openModalPvC),\n/* harmony export */   \"openModalPvP\": () => (/* binding */ openModalPvP),\n/* harmony export */   \"showPvC\": () => (/* binding */ showPvC),\n/* harmony export */   \"showPvP\": () => (/* binding */ showPvP),\n/* harmony export */   \"targetHit\": () => (/* binding */ targetHit),\n/* harmony export */   \"targetMiss\": () => (/* binding */ targetMiss)\n/* harmony export */ });\n// Player vs Player\r\nconst grids = document.querySelectorAll('.grid');\r\nconst gridd = document.querySelectorAll('.gridd');\r\n\r\n// Player vs Computer\r\nconst soloPlayerGrids = document.querySelectorAll('.soloGrid');\r\nconst AIGrids = document.querySelectorAll('.aiGrid');\r\n\r\n// Modal related dom elements\r\nconst pvpModal = document.querySelector('.pvpModal');\r\nconst pvcModal = document.querySelector('.pvcModal');\r\n\r\n// show pvp or pvc board \r\nconst pvpBoard = document.querySelector('.mainContent');\r\nconst pvcBoard = document.querySelector('.mainContent2');\r\n\r\nlet count = 0;\r\nlet count2 = 0;\r\nlet count3 = 0;\r\nlet count4 = 0;\r\nlet direction = 'X';\r\n\r\n// Give all the grids the index attribute starting with 0\r\ngrids.forEach(el => {\r\n    el.setAttribute('index', count);\r\n    count++;\r\n});\r\n\r\ngridd.forEach(el => {\r\n    el.setAttribute('index', count2);\r\n    count2++;\r\n});\r\n\r\nsoloPlayerGrids.forEach(el => {\r\n    el.setAttribute('soloIndex', count3);\r\n    count3++;\r\n});\r\n\r\nAIGrids.forEach(el => {\r\n    el.setAttribute('aiIndex', count4);\r\n    count4++;\r\n});\r\n\r\n// Change the Ship's direction between x-axis and y-axis.\r\nfunction changeBasisX(num) {\r\n    if (num < 10) {\r\n        return num;\r\n    } else if (num >= 10 && num < 20) {\r\n        return num - 10;\r\n    } else if (num >= 20 && num < 30) {\r\n        return num - 20;\r\n    } else if (num >= 30 && num < 40) {\r\n        return num - 30;\r\n    } else if (num >= 40 && num < 50) {\r\n        return num - 40;\r\n    } else if (num >= 50 && num < 60) {\r\n        return num - 50;\r\n    } else if (num >= 60 && num < 70) {\r\n        return num - 60;\r\n    } else if (num >= 70 && num < 80) {\r\n        return num - 70;\r\n    } else if (num >= 80 && num < 90) {\r\n        return num - 80;\r\n    } else if (num >= 90 && num < 100) {\r\n        return num - 90;\r\n    };\r\n};\r\n\r\nfunction changeBasisY(num) {\r\n    if (num >= 0 && num < 10) {\r\n        return num - num;\r\n    } else if (num >= 10 && num < 20) {\r\n        return (num - (num - 10));\r\n    } else if (num >= 20 && num < 30) {\r\n        return (num - (num - 20));\r\n    } else if (num >= 30 && num < 40) {\r\n        return (num - (num - 30));\r\n    } else if (num >= 40 && num < 50) {\r\n        return (num - (num - 40));\r\n    } else if (num >= 50 && num < 60) {\r\n        return (num - (num - 50));\r\n    } else if (num >= 60 && num < 70) {\r\n        return (num - (num - 60));\r\n    } else if (num >= 70 && num < 80) {\r\n        return (num - (num - 70));\r\n    } else if (num >= 80 && num < 90) {\r\n        return (num - (num - 80));\r\n    } else if (num >= 90 && num < 100) {\r\n        return (num - (num - 90));\r\n    }\r\n};\r\n\r\n// Notify player's about whose turn is it.\r\nfunction notifyPlayers(name) {\r\n    //const box1 = document.querySelector('.turnOne');\r\n    const box2 = document.querySelector('.turnTwo');\r\n    const text = document.createElement('p');\r\n    text.classList.add('textStyle');\r\n    text.textContent = `${name}'s turn.`;\r\n\r\n    if (box2.firstChild) {\r\n        while(box2.firstChild) {\r\n            box2.removeChild(box2.firstChild);\r\n        };\r\n    }\r\n\r\n    box2.appendChild(text);\r\n};\r\n\r\nfunction clearNotifyBoard() {\r\n    const box2 = document.querySelector('.turnTwo');\r\n\r\n    if (box2.firstChild) {\r\n        while(box2.firstChild) {\r\n            box2.removeChild(box2.firstChild);\r\n        };\r\n    };\r\n};\r\n\r\n// Target hit sound effect\r\nfunction targetHit() {\r\n    const hit = document.getElementById('hit');\r\n    hit.play();\r\n};\r\n\r\nfunction targetMiss() {\r\n    const miss = document.getElementById('miss');\r\n    miss.play();\r\n};\r\n\r\n\r\nfunction openModalPvP() {\r\n    pvpModal.style.display = 'grid';\r\n};\r\n\r\nfunction closeModalPvP() {\r\n    pvpModal.style.display = 'none';\r\n};\r\n\r\nfunction openModalPvC() {\r\n    pvcModal.style.display = 'grid';\r\n};\r\n\r\nfunction closeModalPvC() {\r\n    pvcModal.style.display = 'none';\r\n};\r\n\r\nfunction showPvP() {\r\n    pvpBoard.style.display = 'grid';\r\n};\r\n\r\nfunction showPvC() {\r\n    pvcBoard.style.display = 'grid';\r\n};\r\n\r\nfunction closePvP() {\r\n    pvpBoard.style.display = 'none';\r\n};\r\n\r\nfunction closePvC() {\r\n    pvcBoard.style.display = 'none';\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack://jest/./src/modules/util/domutil.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;